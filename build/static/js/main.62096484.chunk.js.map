{"version":3,"sources":["Cart.js","Header.js","Product-Card.js","List.js","Cart-List-Item.js","Cart-List.js","App.js","serviceWorker.js","index.js"],"names":["Cart","props","react_default","a","createElement","className","onClick","onOpenModal","count","Header","src","alt","src_Cart_0","this","React","Component","ProductCard","onAddId","_this","onAddProductId","product","id","_this$props$product","name","image","price","Intl","NumberFormat","currency","style","format","List","products","map","key","Product_Card_ProductCard","Object","assign","CartListItem","item","onDec","onInc","CartList","Cart_List_Item","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","App","state","modalIsOpen","productIDsIntoCart","cart","openModal","setState","closeModal","addProductId","includes","prevState","concat","toConsumableArray","addProductToCart","idx","_objectSpread","incrementCount","slice","getCount","decrementCount","filter","reduce","acc","cur","src_Header_0","src_List_0","lib_default","isOpen","onAfterOpen","afterOpenModal","onRequestClose","contentLabel","src_Cart_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62096484.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cart.css';\r\n\r\nconst Cart = (props) => {\r\n    return (\r\n        <div>\r\n            <button className='Cart-button' onClick={props.onOpenModal}>\r\n                <i className=\"material-icons\">shopping_cart</i>\r\n                <span>{props.count}</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react';\nimport './Header.css';\nimport Cart from \"./Cart\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"Header-container\">\n        <div>\n          <span className=\"Header-title\">E-scooter Emporium</span>\n          <img src=\"/assets/logo.png\" className=\"Header-logo\" alt=\"logo\" />\n        </div>\n        <Cart {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\r\nimport './Product-Card.css';\r\n\r\n\r\nexport default class ProductCard extends Component {\r\n\r\n    onAddId = () => {\r\n        this.props.onAddProductId(this.props.product.id);\r\n    }\r\n\r\n    render() {\r\n        let { product: { name, image, price }} = this.props;\r\n        return (            \r\n            <article className='Product-Card'>\r\n                <img className='Product-Card-img' src={image} alt={name} />\r\n                <p className='Product-Card-name'>{name}</p>\r\n                <p className='Product-Card-price'> \r\n                    {price = new Intl.NumberFormat('uk-UA', {currency: 'UAH', style: 'currency'}).format(price)}\r\n                </p>\r\n                <button className='Cart-button' onClick={this.onAddId}>Add to Cart</button>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n","import React,{ Component } from 'react';\r\nimport ProductCard from \"./Product-Card\";\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n    \r\n    render() {\r\n        const { products: { products } } = this.props;\r\n        return (\r\n    <ul className='List'>\r\n        {products.map( product => \r\n            <li className=\"List-Item\" key={product.id} >\r\n                <ProductCard product={product} {...this.props} />\r\n            </li>)}\r\n    </ul> \r\n    )} \r\n}\r\n\r\nexport default List;","import React from 'react';\r\n\r\nconst CartListItem = (props) => {\r\n    const handleInc = () => {\r\n        props.onInc(props.item.id);\r\n    };\r\n\r\n    const handleDec = () => {\r\n        props.onDec(props.item.id);\r\n    };\r\n\r\n    return (\r\n        <li className='item' key={props.item.id}>\r\n            <button className='button' onClick={handleDec}>-</button>\r\n            {props.item.name}\r\n            <button className='button' onClick={handleInc}>+</button>\r\n            <span>{props.item.count}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default CartListItem;","import React from 'react';\r\nimport './Cart-List.css';\r\nimport CartListItem from \"./Cart-List-Item\";\r\n\r\nconst CartList = (props) => {\r\n\r\n    \r\n\r\n    return (\r\n        <ul>\r\n            {props.products.map(item => \r\n                <CartListItem item={item} {...props} />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default CartList;","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport List from './List';\nimport \"./App.css\";\nimport Modal from 'react-modal';\nimport products from \"./products\";\nimport CartList from './Cart-List';\n// import ProductCard from './Product-Card';\n\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root');\n\nclass App extends Component {\n  state = {\n    modalIsOpen: false,\n    productIDsIntoCart: [],\n    cart: [],\n    count: null,\n    products\n  };\n\n  openModal = () => {\n    this.setState({modalIsOpen: true});\n  }  \n\n  closeModal = () => {\n    this.setState({modalIsOpen: false});\n  }\n\n  addProductId = ( id ) => {\n    const idIntoCart = this.state.productIDsIntoCart.includes(id);\n    if(!idIntoCart) {\n      this.setState(prevState => ({\n        productIDsIntoCart: [ id, ...prevState.productIDsIntoCart ]        \n      }));\n    }\n    this.openModal();\n    this.addProductToCart(id);\n  };\n\n  addProductToCart = id => {\n      const idx = this.state.productIDsIntoCart.includes(id);\n      this.state.products.products.map(item => {\n        if(item.id === id && !idx ) {\n\n          this.setState(prevState => ({\n            cart: [\n              {...item, count: 1},\n               ...prevState.cart]\n          }));\n        }\n      });\n      this.incrementCount(id);\n  };\n\n  incrementCount = id => {\n    this.state.cart.map((item, idx) => {\n      if( item.id === id) {\n        this.setState(prevState => ({\n          cart: [\n            ...prevState.cart.slice(0, idx),\n            {...item, count: item.count + 1},\n             ...prevState.cart.slice(idx + 1)]\n        }));        \n      }\n    });\n    this.getCount();\n  };\n\n  decrementCount = id => {\n    this.state.cart.map((item, idx) => {\n      if( item.id === id && item.count >= 1 ) {\n        this.setState(prevState => ({\n          cart: [\n            ...prevState.cart.slice(0, idx),\n            {...item, count: item.count - 1},\n             ...prevState.cart.slice(idx + 1)]\n        }));    \n        this.getCount();    \n      } else {\n        this.setState(prevState => ({\n          productIDsIntoCart: prevState.productIDsIntoCart.filter(item => { \n            return item !== id}),\n          cart: prevState.cart.filter(item => { \n            return item.id !== id}),\n        })); \n      }\n    });\n    \n  };\n\n  getCount = () => {\n    \n      this.setState(prevState => ({\n      count: prevState.cart\n        .map(item => item.count)\n        .reduce((acc, cur) =>  acc + cur )\n    }));\n    \n    \n  };\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header onOpenModal={this.openModal} count={this.state.count} />\n        <div className=\"App-main\">         \n          <List products={this.state.products} onAddProductId={this.addProductId} />          \n        </div>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n\n          <h2 >Cart</h2>\n          <CartList \n            products={this.state.cart} \n            onInc={this.incrementCount}\n            onDec={this.decrementCount}  \n          />\n          <button className='Cart-button' onClick={this.closeModal}>close</button>\n          \n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}